// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

RWTexture2D<float4> Result;
float _Width;
float _Height;
bool _DrawNextFrame;
Texture2D<float4> _StateTexture;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (_StateTexture[id.xy].r > 0.25){
        Result[id.xy] = float4(1,1,1,1);
    }else{
        Result[id.xy] = float4(0,0,0,0);
    }


    float4 c = Result[id.xy];
    float4 neighbours = float4(0,0,0,1);

    for(int i = -1; i <= 1; i++){
        for(int j = -1; j <= 1; j++){
            int x = id.x + i;
            int y = id.y + j;

            if(! (i == 0 && j == 0)){
                // repeat edges
                if(x >= _Width) x = 0;
                if (x < 0) x = _Width - 1;
                if (y >= _Height) y = 0;
                if (y < 0) y = _Height - 1;
                
                neighbours += Result[float2(x, y)];
            }
        }
    }

    float n = neighbours.r;

    if(c.r > 0.5){
        if(n > 1.5 && n < 3.5){
            Result[id.xy] = 1;
        }else{
            Result[id.xy] = 0;
        }
    }else{
        if(n > 2.5 && n < 3.5){
            Result[id.xy] = 1;
        }
        else{
            Result[id.xy] = 0;
        }
    }

}
